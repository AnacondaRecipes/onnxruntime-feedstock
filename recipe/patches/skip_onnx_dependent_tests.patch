These tests require onnx, and including onnx as a conda package pulls in
protobuf, which interferes with the build (especially on Windows, where it
breaks the build), because protobuf is vendored in.

Index: onnxruntime/tools/ci_build/build.py
===================================================================
--- onnxruntime.orig/tools/ci_build/build.py	2024-02-23 15:26:50.133707349 -0600
+++ onnxruntime/tools/ci_build/build.py	2024-02-27 14:35:33.946377885 -0600
@@ -2018,7 +2018,7 @@
                         [sys.executable, "-m", "pip", "uninstall", "--yes", "onnx"], cwd=cwd, dll_path=dll_path
                     )
                     run_subprocess([sys.executable, "-m", "pip", "install", "-q", "onnx"], cwd=cwd, dll_path=dll_path)
-                run_subprocess([sys.executable, "onnxruntime_test_python_iobinding.py"], cwd=cwd, dll_path=dll_path)
+                # run_subprocess([sys.executable, "onnxruntime_test_python_iobinding.py"], cwd=cwd, dll_path=dll_path)
 
             if args.use_cuda:
                 log.info("Testing CUDA Graph feature")
@@ -2027,10 +2027,10 @@
             if not args.disable_ml_ops and not args.use_tensorrt:
                 run_subprocess([sys.executable, "onnxruntime_test_python_mlops.py"], cwd=cwd, dll_path=dll_path)
 
-            if args.use_tensorrt:
-                run_subprocess(
-                    [sys.executable, "onnxruntime_test_python_nested_control_flow_op.py"], cwd=cwd, dll_path=dll_path
-                )
+            # if args.use_tensorrt:
+            #     run_subprocess(
+            #         [sys.executable, "onnxruntime_test_python_nested_control_flow_op.py"], cwd=cwd, dll_path=dll_path
+            #     )
 
             try:
                 import onnx  # noqa: F401
